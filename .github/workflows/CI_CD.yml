name: Continues_Integration_and_Deployment

on:
  push:
    branches:
      - 'master'

jobs:
  install-dep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn

  lint:
    runs-on: ubuntu-latest

    needs: install-dep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Lint with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn lint-check

  test:
    runs-on: ubuntu-latest

    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Test with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn test

  component_testing:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Cypress Component testing
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn cy-run-components

      - name: Archive cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-component-videos
          path: |
            ./cypress/videos

  build:
    runs-on: ubuntu-latest

    needs: component_testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Build with envs
        env:
          VITE_CLEINT_ID: ${{ secrets.VITE_CLEINT_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ID: ${{ secrets.ID }}
          NAME: ${{ secrets.NAME }}
          PHOTO_URL: ${{ secrets.PHOTO_URL }}
        run: yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            ./dist

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images to e2e test
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  version:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Configure commiter
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Generate Version
        run: |
          yarn release

      - name: Pushing Version
        run: |
          git pull
          git commit --allow-empty -m "[skip ci]"
          git push --follow-tags origin master

  creating_release:
    runs-on: ubuntu-latest

    needs: version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Get package.json version
        id: get_version
        run: |
          echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.13.0
        with:
          bodyFile: 'CHANGELOG.md'
          tag: ${{ steps.get_version.outputs.version }}

  end_to_end_testing:
    runs-on: ubuntu-latest

    needs: creating_release

    services:
      app_to_test:
        image: ghcr.io/agustinallamanocosta/gtdfront:master
        options: --name app_to_test
        env:
          VITE_CLEINT_ID: ${{ secrets.VITE_CLEINT_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ID: ${{ secrets.ID }}
          NAME: ${{ secrets.NAME }}
          PHOTO_URL: ${{ secrets.PHOTO_URL }}
          APP_ENV: 'E2E'
        ports:
          - 8080:8080

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Run end to end testing
        shell: bash
        run: yarn cy-run-e2e

      - name: Archive cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: |
            ./cypress/videos

  deploy_on_firebase:
    runs-on: ubuntu-latest

    needs: end_to_end_testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Download production artifact
        uses: actions/download-artifact@v4.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          name: production-build
          path: ./dist

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0.7.1
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_GETTHINGSDONE_391622 }}'
          projectId: getthingsdone-391622
          channelId: live
