name: Continues_Integration_and_Deployment

on:
  push:
    branches:
      - 'master'

jobs:
  install-dep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn

  lint:
    runs-on: ubuntu-latest

    needs: install-dep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Lint with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn lint-check

  test:
    runs-on: ubuntu-latest

    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Test with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

  build:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Build with Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist

  #  cypress:
  #    runs-on: ubuntu-latest
  #
  #    needs: build
  #
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v4
  #
  #      - name: Cache dependencies
  #        id: cache-dependencies
  #        uses: actions/cache@v3.3.2
  #        with:
  #          path: |
  #            **/node_modules
  #          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #
  #      - name: Cypress run
  #        uses: cypress-io/github-action@v6
  #        with:
  #          start: yarn cy-ci

  version:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Configure commiter
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Generate Version
        run: |
          yarn release

      - name: Pushing Version
        run: |
          git commit --allow-empty -m "[skip ci]"
          git push --follow-tags origin master

  creating_release:
    runs-on: ubuntu-latest

    needs: version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.3.2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Get package.json version
        id: get_version
        run: |
          echo "::set-output name=version::$(jq -r '.version' package.json)"

      - name: Download production artifact
        uses: aochmann/actions-download-artifact@1.0.0
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          name: dist

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.9.0
        with:
          run: version=$(jq -r '.version' package.json)
          bodyFile: 'CHANGELOG.md'
          artifacts: './dist'
          tag: ${{ steps.get_version.outputs.version }}

  deploy_on_firebase:
    runs-on: ubuntu-latest

    needs: creating_release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get package.json version
        id: get_version
        run: |
          echo "::set-output name=version::$(jq -r '.version' package.json)"

      - name: Download production artifact
        uses: aochmann/actions-download-artifact@1.0.0
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          name: dist

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0.6-alpha
        with:
          run: version=$(jq -r '.version' package.json)
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_GETTHINGSDONE_391622 }}'
          projectId: getthingsdone-391622
          channelId: ${{ steps.get_version.outputs.version }}
